load("@aspect_bazel_lib//lib:run_binary.bzl", "run_binary")
load("@bazel_skylib//rules:write_file.bzl", "write_file")
load("//:defs.bzl", "non_osx", "non_windows", "windows_only")

HEADERS = {
	"HAVE_ATTR_XATTR_H": "attr/xattr.h",
	"HAVE_DLFCN_H": "dlfcn.h",
	"HAVE_ERRNO_H": "errno.h",
	"HAVE_FCNTL_H": "fcntl.h",
	"HAVE_GRP_H": "grp.h",
	"HAVE_IO_H": "io.h",
	"HAVE_INTTYPES_H": "inttypes.h",
	"HAVE_LOCALE_H": "locale.h",
	"HAVE_LIMITS_H": "limits.h",
	"HAVE_LINUX_FS_H": "linux/fs.h",
	"HAVE_PATHS_H": "paths.h",
	"HAVE_PWD_H": "pwd.h",
	"HAVE_STDINT_H": "stdint.h",
	"HAVE_STDIO_H": "stdio.h",
	"HAVE_STDLIB_H": "stdlib.h",
	"HAVE_STRING_H": "string.h",
	"HAVE_SYS_SELECT_H": "sys/select.h",
	"HAVE_SYS_STAT_H": "sys/stat.h",
	"HAVE_SYS_TIMEB_H": "sys/timeb.h",
	"HAVE_SYS_TIME_H": "sys/time.h",
	"HAVE_SYS_TYPES_H": "sys/types.h",
	"HAVE_SYS_XATTR_H": "sys/xattr.h",
	"HAVE_UNISTD_H": "unistd.h",
	"HAVE_WCHAR_H": "wchar.h",
	"HAVE_XLOCALE_H": "xlocale.h",
}

write_file(
    name = "write_config_generator",
	out = "config_generator.c",
	content = [
		"#include <stdio.h>",
		"#include <stdlib.h>",
	] + ["""
#if __has_include(<{header}>)
    #define {define} 1
#else
    #define {define} 0
#endif
""".format(define=define, header=header)
	for define, header in HEADERS.items()
	] + ["""
int main(int argc, char *argv[]) {
    FILE *f = fopen(argv[1], "w");
    if (!f) {
        perror("fopen");
        return 1;
    }
	fprintf(f, "#ifndef _RULES_AUTOCONF_CONFIG_H\\n");
	fprintf(f, "#define _RULES_AUTOCONF_CONFIG_H\\n\\n");
"""] + ['    fprintf(f, "#define {define} %d\\n", {define});'.format(define=define) for define in HEADERS.keys()
	] + ["""
	fprintf(f, "\\n#endif // _RULES_AUTOCONF_CONFIG_H\\n");
  	fclose(f);
 	return 0;
}""",
	]
)

cc_binary(
	name = "config_generator",
	srcs = ["config_generator.c"],
)

run_binary(
	name = "gen_config",
	tool = ":config_generator",
	args = ["$(execpath :config.h)"],
	outs = ["config.h"],
)

HAVE_CLOCK_GETTIME = non_windows("HAVE_CLOCK_GETTIME")
HAVE_FTIME = non_osx("HAVE_FTIME")
HAVE_GETTIMEOFDAY = non_windows("HAVE_GETTIMEOFDAY")
HAVE_GMTIME_R = non_windows("HAVE_GMTIME_R")
HAVE_LIBPTHREAD = non_windows("HAVE_LIBPTHREAD")
HAVE_LOCALTIME_R = non_windows("HAVE_LOCALTIME_R")
HAVE_STAT = non_windows("HAVE_STAT")
HAVE_STRXFRM_L = non_windows("HAVE_STRXFRM_L")
HAVE__STAT = windows_only("HAVE__STAT")

cc_library(
	name = "config",
	hdrs = ["config.h"],
	defines = (
		HAVE_CLOCK_GETTIME +
		HAVE_FTIME +
		HAVE_GETTIMEOFDAY +
		HAVE_GMTIME_R +
		HAVE_LIBPTHREAD +
		HAVE_LOCALTIME_R +
		HAVE_STAT +
		HAVE_STRXFRM_L +
		HAVE__STAT
	) + [
		"HAVE_SNPRINTF",
		"HAVE_VSNPRINTF",
	],
	include_prefix = "rules_autoconf",
	visibility = ["//visibility:public"],
)
